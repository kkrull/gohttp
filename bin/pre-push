#!/bin/bash

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>

remote="$1"
url="$2"

z40=0000000000000000000000000000000000000000

while read local_ref local_sha remote_ref remote_sha
do
  if [ "$local_sha" = $z40 ]
  then
    # Handle delete
    :
  else
    git diff-index --quiet HEAD --
    if (( $? != 0 ))
    then
      echo "pre-push: Uncommitted changes"
      exit 1
    fi

    goimports -w .
    git diff-index --quiet HEAD --
    if (( $? != 0 ))
    then
      echo "pre-push: Uncommitted formatting"
      git status
      exit 1
    fi

    gometalinter.v2 ./...
    if (( $? != 0 ))
    then
      echo "pre-push: lint errors"
      exit 1
    fi
  fi
done

exit 0
